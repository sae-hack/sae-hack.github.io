{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","redux/types.ts","redux/user.ts","redux/session.ts","utils.ts","redux/index.ts","redux/speakers.ts","RecordControl.tsx","UserControls.tsx","BottomBar.tsx","MarkdownEditor.tsx","EditableMarkdown.tsx","DialogView.tsx","EditableSpan.tsx","SpeakerList.tsx","App.tsx","hooks.ts","reportWebVitals.js","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","ActionType","startSession","region","handleEventStreamMessage","dispatch","path","type","StartSessionRequest","Auth","currentSession","session","jwtToken","getIdToken","getJwtToken","API","get","headers","Authorization","data","credentials","window","access_id","AccessKeyId","secret_key","SecretAccessKey","session_token","SessionToken","startTranscribe","StartSessionSuccess","catch","error","StartSessionFailure","store","createStore","combineReducers","users","states","action","SetUser","user","speakers","OverrideSpeaker","speakerId","speakerName","fetchingCredential","recording","StopSession","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","useUser","useSpeakers","Styles","styled","div","RecordControl","onEventStreamMessage","saveToQuip","handleStartSession","useCallback","handleStopSession","closeSocket","handleSaveToQuip","savedToken","localStorage","getItem","quipToken","prompt","setItem","url","className","color","size","height","disabled","onClick","style","display","icon","faPlay","faStop","UserControls","attributes","email","BottomBar","props","MarkdownEditor","value","onChange","onBlur","useMemo","inlineToolbarPlugin","createInlineToolbarPlugin","InlineToolbar","plugins","useState","EditorState","createWithContent","convertFromRaw","markdownToDraft","editorState","setEditorState","handleChange","newState","markdown","draftToMarkdown","convertToRaw","getCurrentContent","styleItems","UNDERLINE","open","close","EditorContainer","SpanContainer","EditableMarkdown","editing","setEditing","OverlayTrigger","placement","overlay","Tooltip","faEdit","DialogView","dialog","partial","speakerOptions","onSetSpeaker","updateDialog","onMergeUpDialog","onDeleteDialog","_color","Color","speaker","String","borderColor","backgroundColor","faUserAstronaut","Dropdown","Toggle","Menu","show","name","Item","href","lighten","hex","words","newValue","dialogId","faClock","startTime","toFixed","faLevelUpAlt","faTrash","React","memo","Span","span","EditableSpan","children","setValue","useEffect","Form","Control","target","Button","SpeakerList","speakerNames","onNameChange","unallocatedSpeakerNames","addNewSpeaker","newSpeakerName","setNewSpeakerName","ListGroup","background","customSpeakerIds","DEFAULT_COLORS","distinctColors","count","lightMin","App","onAuthUIStateChange","nextAuthState","authData","AuthState","SignedIn","undefined","transcription","setTranscription","setPartial","messageJson","results","Transcript","Results","length","Alternatives","transcript","decodeURIComponent","escape","IsPartial","t","dialogsToAppend","speakerChanged","Items","item","Speaker","text","Content","Type","StartTime","endTime","EndTime","lastDialog","push","uuidv4","pop","useTranscribe","allocateSpeakerNames","allSpeakers","Set","sort","unallocated","filter","includes","colors","handleSpeakerNameChange","from","to","parseInt","console","handleCreateNewSpeaker","alert","s","handleSetSpeaker","newId","generateNewSpeakerId","indexToReplace","indexOf","slice","documentUrl","payload","dialogs","strings","join","makeMarkdown","content","put","body","updated","d","nd","handleMergeUpDialog","index","previousDialog","mergedDialog","handleDeleteDialog","Container","fluid","marginBottom","Row","Col","xs","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Amplify","configure","identityPoolId","userPoolId","userPoolWebClientId","endpoints","endpoint","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5b25755.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t864,\n\t\t16\n\t],\n\t\"./amplify-auth-container.entry.js\": [\n\t\t865,\n\t\t17\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t866,\n\t\t18\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t867,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t868,\n\t\t19\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t869,\n\t\t4\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t870,\n\t\t20\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t871,\n\t\t6\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t872,\n\t\t21\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t873,\n\t\t22\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t874,\n\t\t23\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t875,\n\t\t24\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t876,\n\t\t25\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t877,\n\t\t26\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t878,\n\t\t7\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t879,\n\t\t27\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t880,\n\t\t28\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t881,\n\t\t29\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t882,\n\t\t30\n\t],\n\t\"./amplify-radio-button_3.entry.js\": [\n\t\t883,\n\t\t8\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t884,\n\t\t9\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t885,\n\t\t10\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t886,\n\t\t11\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t887,\n\t\t12\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t888,\n\t\t13\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t889,\n\t\t31\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t890,\n\t\t14\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t891,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 623;\nmodule.exports = webpackAsyncContext;","export enum ActionType {\n  SetUser,\n  OverrideSpeaker,\n  StartSessionRequest,\n  StartSessionSuccess,\n  StartSessionFailure,\n  StopSession,\n}\n","import { CognitoUser } from \"amazon-cognito-identity-js\";\nimport { AnyAction } from \"redux\";\nimport { ActionType } from \"./types\";\n\ninterface UserState {\n  user?: CognitoUser | undefined;\n}\n\nexport const usersReducer = (\n  states: UserState = {},\n  action: AnyAction\n): UserState => {\n  switch (action.type) {\n    case ActionType.SetUser:\n      return { user: action.user };\n    default:\n      return states;\n  }\n};\n","import { AnyAction, Dispatch } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { makeRequest } from \"../utils\";\nimport { ActionType } from \"./types\";\n\ninterface SessionState {\n  fetchingCredential?: boolean;\n  recording?: boolean;\n  error?: Error;\n}\n\nexport const sessionReducer = (\n  states: SessionState = {},\n  action: AnyAction\n): SessionState => {\n  switch (action.type) {\n    case ActionType.StartSessionRequest:\n      return { fetchingCredential: true };\n    case ActionType.StartSessionSuccess:\n      return { recording: true };\n    case ActionType.StartSessionFailure:\n      return { error: action.error };\n    case ActionType.StopSession:\n      return { recording: false };\n    default:\n      return states;\n  }\n};\n\nexport const startSession = (\n  region: string,\n  handleEventStreamMessage: (messageJson: any) => void\n): ThunkAction<void, any, any, AnyAction> => {\n  return (dispatch: Dispatch) => {\n    dispatch({ type: ActionType.StartSessionRequest });\n    makeRequest(\"/start-session\")\n      .then((data: any) => {\n        const { credentials } = data;\n        (window as any).handleEventStreamMessage = handleEventStreamMessage;\n        (window as any).region = region;\n        (window as any).access_id = credentials.AccessKeyId;\n        (window as any).secret_key = credentials.SecretAccessKey;\n        (window as any).session_token = credentials.SessionToken;\n        (window as any).startTranscribe();\n        dispatch({ type: ActionType.StartSessionSuccess });\n      })\n      .catch((error) => {\n        dispatch({ type: ActionType.StartSessionFailure, error });\n      });\n  };\n};\n\nexport const stopSession = (): ThunkAction<void, any, any, AnyAction> => {\n  return (dispatch: Dispatch) => {\n    (window as any).closeSocket();\n    dispatch({ type: ActionType.StopSession });\n  };\n};\n","import { API, Auth } from \"aws-amplify\";\nimport { Dialog } from \"./types\";\n\nexport const makeRequest = <T>(path: string): Promise<T> => {\n  return Auth.currentSession().then((session) => {\n    const jwtToken = session.getIdToken().getJwtToken();\n    return API.get(\"SAMAPI\", path, {\n      headers: { Authorization: \"Bearer \" + jwtToken },\n    });\n  });\n};\n\nexport const makePostRequest = <T>(\n  path: string,\n  payload: Record<string, string>\n): Promise<T> => {\n  return Auth.currentSession().then((session) => {\n    const jwtToken = session.getIdToken().getJwtToken();\n    return API.put(\"SAMAPI\", path, {\n      body: payload,\n      headers: { Authorization: \"Bearer \" + jwtToken },\n    });\n  });\n};\n\nexport const makeMarkdown = (\n  dialogs: Dialog[],\n  speakers: Record<number, string>\n): string => {\n  const strings = [\"# Transcribe\"];\n\n  for (const dialog of dialogs) {\n    strings.push(\n      `(${dialog.startTime.toFixed(2)}-${dialog.endTime.toFixed(2)}) **${\n        speakers[dialog.speaker] || dialog.speaker\n      }** ${dialog.words}`\n    );\n  }\n\n  return strings.join(\"\\n\\n\");\n};\n","import {\n  createStore,\n  applyMiddleware,\n  combineReducers,\n  AnyAction,\n} from \"redux\";\n\nimport thunk, { ThunkDispatch } from \"redux-thunk\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport { usersReducer } from \"./user\";\nimport { speakersReducer } from \"./speakers\";\nimport { sessionReducer } from \"./session\";\nexport { startSession, stopSession } from \"./session\";\nexport { ActionType } from \"./types\";\n\nexport const store = createStore(\n  combineReducers({\n    users: usersReducer,\n    speakers: speakersReducer,\n    session: sessionReducer,\n  }),\n  applyMiddleware(thunk)\n);\n\n// typescript support\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = ThunkDispatch<RootState, any, AnyAction>;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n// hooks\n\ntype CognitoUserTweaked = CognitoUser & {\n  username?: string;\n  attributes?: {\n    email: string;\n    email_verified: boolean;\n  };\n};\n\nexport const useUser = (): CognitoUserTweaked | undefined =>\n  useAppSelector((states) => states.users.user);\n\nexport const useSpeakers = (): Record<string, string> =>\n  useAppSelector((states) => states.speakers);\n","import { AnyAction } from \"redux\";\nimport { ActionType } from \"./types\";\n\ntype SpeakerState = Record<string, string>;\n\nexport const speakersReducer = (\n  speakers: SpeakerState = {},\n  action: AnyAction\n): SpeakerState => {\n  switch (action.type) {\n    case ActionType.OverrideSpeaker:\n      return { ...speakers, [action.speakerId]: action.speakerName };\n    default:\n      return speakers;\n  }\n};\n","import { AmplifyButton } from \"@aws-amplify/ui-react\";\nimport { faPlay, faStop } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useCallback } from \"react\";\nimport { ClipLoader, ScaleLoader } from \"react-spinners\";\nimport styled from \"styled-components\";\nimport {\n  startSession,\n  stopSession,\n  useAppDispatch,\n  useAppSelector,\n  useUser,\n} from \"./redux\";\n\nconst Styles = styled.div`\n  display: flex;\n  width: auto;\n  align-items: center;\n\n  .status-icon {\n    padding-right: 5px;\n  }\n`;\n\nexport interface RecordControlProps {\n  saveToQuip: (documentUrl: string, quipToken: string) => void;\n  onEventStreamMessage: (messageJson: any) => void;\n}\n\nconst RecordControl: React.FC<RecordControlProps> = ({\n  onEventStreamMessage,\n  saveToQuip,\n}) => {\n  const user = useUser();\n\n  const { fetchingCredential, recording } = useAppSelector(\n    (states) => states.session\n  );\n\n  const dispatch = useAppDispatch();\n  const handleStartSession = useCallback(() => {\n    if (user) {\n      dispatch(startSession(\"us-west-2\", onEventStreamMessage));\n    }\n  }, [dispatch, user, onEventStreamMessage]);\n\n  const handleStopSession = useCallback(() => {\n    if (user) {\n      dispatch(stopSession());\n    }\n  }, [dispatch, user]);\n\n  const handleSaveToQuip = useCallback(() => {\n    const savedToken = localStorage.getItem(\"quip-token\") || \"\";\n    const quipToken = prompt(\n      \"Quip Token (get one from https://quip-amazon.com/dev/token):\",\n      savedToken\n    );\n    if (quipToken) {\n      localStorage.setItem(\"quip-token\", quipToken);\n      const url = prompt(\"Quip document URL:\");\n      if (url) {\n        saveToQuip(url, quipToken);\n      }\n    }\n  }, [saveToQuip]);\n\n  return (\n    <Styles>\n      <div className=\"status-icon\">\n        {fetchingCredential && <ClipLoader color=\"white\" size={20} />}\n        {recording && <ScaleLoader color=\"white\" height={20} />}\n      </div>\n      <AmplifyButton disabled={!user} onClick={handleSaveToQuip}>\n        Save to Quip\n      </AmplifyButton>\n      {/* somehow we cannot conditional render these buttons. The style will be off once we do that. Using style.display to control them */}\n      <AmplifyButton\n        disabled={!user}\n        onClick={handleStartSession}\n        style={{ display: recording ? \"none\" : \"unset\" }}\n      >\n        <FontAwesomeIcon icon={faPlay} />\n      </AmplifyButton>\n      <AmplifyButton\n        disabled={!user}\n        onClick={handleStopSession}\n        style={{ display: recording ? \"unset\" : \"none\" }}\n      >\n        <FontAwesomeIcon icon={faStop} />\n      </AmplifyButton>\n    </Styles>\n  );\n};\n\nexport default RecordControl;\n","import { AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useUser } from \"./redux\";\n\nconst Styles = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & > span {\n    margin: 0 1rem;\n  }\n`;\n\nconst UserControls: React.FC = () => {\n  const user = useUser();\n\n  if (!user) return null;\n\n  return (\n    <Styles>\n      <span>{user?.attributes?.email}</span>\n      <AmplifySignOut />\n    </Styles>\n  );\n};\n\nexport default UserControls;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RecordControl, { RecordControlProps } from \"./RecordControl\";\nimport UserControls from \"./UserControls\";\n\nconst Styles = styled.div`\n  display: flex;\n  position: fixed;\n  width: 100%;\n  bottom: 0;\n  background-color: orange;\n  justify-content: space-between;\n  color: white;\n`;\n\nconst BottomBar: React.FC<RecordControlProps> = (props) => {\n  return (\n    <Styles>\n      <UserControls />\n      <RecordControl {...props} />\n    </Styles>\n  );\n};\n\nexport default BottomBar;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { EditorState, convertFromRaw, convertToRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createInlineToolbarPlugin from \"@draft-js-plugins/inline-toolbar\";\nimport \"@draft-js-plugins/inline-toolbar/lib/plugin.css\";\nimport { draftToMarkdown, markdownToDraft } from \"markdown-draft-js\";\n\nexport interface MarkdownEditorProps {\n  value: string;\n  onChange: (newValue: string) => void;\n}\n\nconst MarkdownEditor: React.FC<MarkdownEditorProps & { onBlur: () => void }> =\n  ({ value, onChange, onBlur }) => {\n    const [plugins, InlineToolbar] = useMemo(() => {\n      const inlineToolbarPlugin = createInlineToolbarPlugin();\n      return [[inlineToolbarPlugin], inlineToolbarPlugin.InlineToolbar];\n    }, []);\n\n    const [editorState, setEditorState] = useState(() =>\n      EditorState.createWithContent(convertFromRaw(markdownToDraft(value)))\n    );\n\n    const handleChange = useCallback(\n      (newState: EditorState) => {\n        setEditorState(newState);\n\n        const markdown = draftToMarkdown(\n          convertToRaw(newState.getCurrentContent()),\n          {\n            styleItems: {\n              UNDERLINE: {\n                open: function open() {\n                  return \"<u>\";\n                },\n\n                close: function close() {\n                  return \"</u>\";\n                },\n              },\n            },\n          }\n        );\n        onChange(markdown);\n      },\n      [onChange]\n    );\n\n    return (\n      <div>\n        <Editor\n          editorState={editorState}\n          onChange={handleChange}\n          onBlur={onBlur}\n          plugins={plugins}\n        />\n        <InlineToolbar />\n      </div>\n    );\n  };\n\nexport default MarkdownEditor;\n","import React, { useState } from \"react\";\nimport MarkdownEditor, { MarkdownEditorProps } from \"./MarkdownEditor\";\nimport ReactMarkdown from \"react-markdown\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nconst EditorContainer = styled.div`\n  padding-bottom: 10px;\n`;\n\nconst SpanContainer = styled.div`\n  min-height: 60px;\n  cursor: pointer;\n\n  svg {\n    position: absolute;\n    bottom: 5px;\n    right: 5px;\n  }\n`;\n\nconst EditableMarkdown: React.FC<MarkdownEditorProps> = ({\n  value,\n  onChange,\n}) => {\n  const [editing, setEditing] = useState(false);\n\n  return editing ? (\n    <EditorContainer>\n      <MarkdownEditor\n        value={value}\n        onChange={onChange}\n        onBlur={() => setEditing(false)}\n      />\n    </EditorContainer>\n  ) : (\n    <SpanContainer onClick={() => setEditing(true)}>\n      <span>\n        <ReactMarkdown>{value}</ReactMarkdown>\n      </span>\n      <OverlayTrigger\n        placement=\"top\"\n        overlay={\n          <Tooltip id=\"edit-tooltip\">\n            Click the text to edit, highlight text to style it.\n          </Tooltip>\n        }\n      >\n        <FontAwesomeIcon icon={faEdit} />\n      </OverlayTrigger>\n    </SpanContainer>\n  );\n};\n\nexport default EditableMarkdown;\n","import {\n  faClock,\n  faLevelUpAlt,\n  faTrash,\n  faUserAstronaut,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { BeatLoader } from \"react-spinners\";\nimport styled from \"styled-components\";\nimport { Dialog } from \"./types\";\nimport Color from \"color\";\nimport { Dropdown, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport EditableMarkdown from \"./EditableMarkdown\";\nimport { useSpeakers } from \"./redux\";\n\nconst Styles = styled.div`\n  display: flex;\n  border: solid 1px;\n  border-radius: 5px;\n  margin: 1rem;\n\n  .meta {\n    flex-shrink: 0;\n    width: 120px;\n    position: relative;\n    text-align: center;\n    min-height: 50px;\n\n    .speaking {\n      margin-top: 5px;\n    }\n\n    .speaker {\n      width: 120px;\n      height: 80px;\n\n      .speaker-icon {\n        font-size: 30px;\n      }\n\n      .speaker-label {\n        font-weight: bold;\n        cursor: pointer;\n        font-size: 1rem;\n\n        .btn {\n          /* erase the styles brought by react-bootstrap */\n          background-color: unset !important;\n          border: unset !important;\n          color: black;\n        }\n      }\n    }\n  }\n\n  .content {\n    padding: 5px;\n    flex-grow: 1;\n    position: relative;\n\n    .form-control {\n      background-color: transparent !important;\n    }\n\n    .timestamp {\n      position: absolute;\n      font-size: 0.6rem;\n      bottom: 5px;\n      left: 10px;\n    }\n\n    .merge-up-button {\n      position: absolute;\n      bottom: 1px;\n      right: 52px;\n      cursor: pointer;\n    }\n\n    .delete-button {\n      position: absolute;\n      bottom: 1px;\n      right: 32px;\n      cursor: pointer;\n    }\n  }\n`;\n\ninterface Props {\n  dialog?: Dialog;\n  partial?: string;\n  color?: string;\n  speakerOptions: string[];\n  onSetSpeaker: (dialog: Dialog, name: string) => void;\n  updateDialog?: (diaglogId: string, dialog: string) => void;\n  onMergeUpDialog?: (dialogId: string) => void;\n  onDeleteDialog?: (dialogId: string) => void;\n}\n\nconst DialogView: React.FC<Props> = ({\n  dialog,\n  partial,\n  color = \"#fff\",\n  speakerOptions,\n  onSetSpeaker,\n  updateDialog,\n  onMergeUpDialog,\n  onDeleteDialog,\n}) => {\n  const [editing, setEditing] = useState(false);\n  const speakers = useSpeakers();\n\n  const _color = Color(color);\n\n  const speakerName =\n    dialog && (speakers[dialog.speaker] || String(dialog.speaker));\n\n  return (\n    <Styles style={{ borderColor: color }}>\n      <div className=\"meta\" style={{ backgroundColor: color }}>\n        {dialog && (\n          <>\n            <div className=\"speaker\">\n              <div className=\"speaker-icon\">\n                <FontAwesomeIcon icon={faUserAstronaut} />\n              </div>\n              <div className=\"speaker-label\" onClick={() => setEditing(true)}>\n                <Dropdown>\n                  <OverlayTrigger\n                    placement=\"top\"\n                    overlay={\n                      <Tooltip id=\"edit-dialog-speaker-tooltip\">\n                        Select the speaker for this bubble\n                      </Tooltip>\n                    }\n                  >\n                    <Dropdown.Toggle>{speakerName}</Dropdown.Toggle>\n                  </OverlayTrigger>\n\n                  <Dropdown.Menu show={editing}>\n                    {speakerOptions.map((name) => (\n                      <Dropdown.Item\n                        key={name}\n                        href=\"#\"\n                        onClick={() => onSetSpeaker(dialog, name)}\n                      >\n                        {name}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </div>\n          </>\n        )}\n        {partial && (\n          <div className=\"speaking\">\n            <BeatLoader />\n          </div>\n        )}\n      </div>\n      <div\n        className=\"content\"\n        style={{ backgroundColor: _color.lighten(0.2).hex() }}\n      >\n        {dialog && (\n          <EditableMarkdown\n            value={dialog.words}\n            onChange={(newValue) => {\n              if (updateDialog && dialog) {\n                updateDialog(dialog.dialogId, newValue);\n              }\n            }}\n          />\n        )}\n        {partial && <span>{partial}</span>}\n        {dialog && (\n          <div className=\"timestamp\">\n            <FontAwesomeIcon icon={faClock} /> {dialog.startTime.toFixed(2)}s\n          </div>\n        )}\n        {dialog && onMergeUpDialog && (\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={\n              <Tooltip id=\"merge-up-tooltip\">\n                Merge this into the previous bubble\n              </Tooltip>\n            }\n          >\n            <div\n              className=\"merge-up-button\"\n              onClick={() => onMergeUpDialog(dialog.dialogId)}\n            >\n              <FontAwesomeIcon icon={faLevelUpAlt} />\n            </div>\n          </OverlayTrigger>\n        )}\n        {dialog && onDeleteDialog && (\n          <div\n            className=\"delete-button\"\n            onClick={() => onDeleteDialog(dialog.dialogId)}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </div>\n        )}\n      </div>\n    </Styles>\n  );\n};\n\nexport default React.memo(DialogView);\n","import { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst Span = styled.span`\n  cursor: pointer;\n`;\n\ninterface Props {\n  children: string;\n  onChange: (newValue: string) => void;\n}\n\nconst EditableSpan: React.FC<Props> = ({ children, onChange }) => {\n  const [value, setValue] = useState(children);\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    setValue(children);\n  }, [children]);\n\n  return editing ? (\n    <div>\n      <Form.Control value={value} onChange={(e) => setValue(e.target.value)} />\n      <Button\n        onClick={() => {\n          setValue(children);\n          setEditing(false);\n        }}\n      >\n        Cancel\n      </Button>{\" \"}\n      <Button\n        onClick={() => {\n          onChange(value);\n          setEditing(false);\n        }}\n      >\n        Save\n      </Button>\n    </div>\n  ) : (\n    <Span onClick={() => setEditing(true)}>\n      <FontAwesomeIcon icon={faEdit} /> {value}\n    </Span>\n  );\n};\n\nexport default EditableSpan;\n","import React, { useState } from \"react\";\nimport { Button, Form, ListGroup } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport EditableSpan from \"./EditableSpan\";\n\nconst Styles = styled.div`\n  position: fixed;\n  right: 0;\n  padding: 5px;\n  width: 25%;\n`;\n\ninterface Props {\n  speakerNames: string[];\n  unallocatedSpeakerNames: string[];\n  onNameChange: (from: string, to: string) => void;\n  addNewSpeaker: (name: string) => void;\n}\n\nconst SpeakerList: React.FC<Props> = ({\n  speakerNames,\n  onNameChange,\n  unallocatedSpeakerNames,\n  addNewSpeaker,\n}) => {\n  const [newSpeakerName, setNewSpeakerName] = useState(\"\");\n\n  return (\n    <Styles>\n      <h3>Speakers</h3>\n      <ListGroup>\n        {speakerNames.map((name) => (\n          <ListGroup.Item key={name}>\n            <EditableSpan onChange={(newValue) => onNameChange(name, newValue)}>\n              {name}\n            </EditableSpan>\n          </ListGroup.Item>\n        ))}\n        {unallocatedSpeakerNames.map((name) => (\n          <ListGroup.Item key={name} style={{ background: \"#ccc\" }}>\n            <EditableSpan onChange={(newValue) => onNameChange(name, newValue)}>\n              {name}\n            </EditableSpan>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n      <Form.Control\n        value={newSpeakerName}\n        onChange={(e) => setNewSpeakerName(e.target.value)}\n      />\n      <Button\n        disabled={!newSpeakerName}\n        onClick={() => {\n          newSpeakerName && addNewSpeaker(newSpeakerName);\n          setNewSpeakerName(\"\");\n        }}\n      >\n        Add Speaker\n      </Button>\n    </Styles>\n  );\n};\n\nexport default SpeakerList;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AmplifyAuthenticator } from \"@aws-amplify/ui-react\";\nimport { AuthState, onAuthUIStateChange } from \"@aws-amplify/ui-components\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport BottomBar from \"./BottomBar\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport { useTranscribe } from \"./hooks\";\nimport DialogView from \"./DialogView\";\nimport distinctColors from \"distinct-colors\";\nimport SpeakerList from \"./SpeakerList\";\nimport { Dialog } from \"./types\";\nimport { makeMarkdown, makePostRequest } from \"./utils\";\nimport { ActionType, useAppDispatch, useSpeakers, useUser } from \"./redux\";\n\nconst customSpeakerIds: number[] = [];\nconst generateNewSpeakerId = (): number => {\n  if (customSpeakerIds.length === 0) {\n    customSpeakerIds.push(10000);\n    return 10000;\n  } else {\n    const newId = customSpeakerIds[customSpeakerIds.length - 1] + 1;\n    customSpeakerIds.push(newId);\n    return newId;\n  }\n};\n\nconst DEFAULT_SPEAKER_COUNT = 6; // if there are more speakers, we recreate the colors object\nconst DEFAULT_COLORS = distinctColors({\n  count: DEFAULT_SPEAKER_COUNT,\n  lightMin: 80,\n}).map((color) => color.hex());\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    return onAuthUIStateChange((nextAuthState, authData) => {\n      if (nextAuthState === AuthState.SignedIn) {\n        dispatch({ type: ActionType.SetUser, user: authData as CognitoUser });\n      } else {\n        dispatch({ type: ActionType.SetUser, user: undefined });\n      }\n    });\n  }, [dispatch]);\n  const user = useUser();\n\n  const { transcription, setTranscription, partial, handleEventStreamMessage } =\n    useTranscribe();\n\n  const [unallocatedSpeakerNames, allocateSpeakerNames] = useState<string[]>(\n    []\n  );\n\n  const speakers = useSpeakers();\n\n  const allSpeakers = [\n    ...new Set(\n      transcription.map(({ speaker }) => speakers[speaker] || String(speaker))\n    ),\n  ].sort();\n\n  useEffect(() => {\n    allocateSpeakerNames((unallocated) => {\n      const allocated = unallocated.filter((name) =>\n        allSpeakers.includes(name)\n      );\n\n      if (allocated.length > 0) {\n        return unallocated.filter((name) => !allSpeakers.includes(name));\n      }\n      return unallocated;\n    });\n  }, [allSpeakers]);\n\n  const colors = useMemo(\n    () =>\n      allSpeakers.length > DEFAULT_SPEAKER_COUNT\n        ? distinctColors({ count: allSpeakers.length }).map((color) =>\n            color.hex()\n          )\n        : DEFAULT_COLORS,\n    [allSpeakers.length]\n  );\n\n  const handleSpeakerNameChange = useCallback(\n    (from: string, to: string) => {\n      // find old speaker id\n      let speakerId = null;\n      for (const id in speakers) {\n        if (speakers[id] === from) {\n          speakerId = id;\n          break;\n        }\n      }\n\n      if (speakerId === null && allSpeakers.includes(from)) {\n        // it is a speaker number\n        speakerId = parseInt(from);\n      } else {\n        console.error(\"Cannot find speaker with existing name \", from);\n      }\n\n      dispatch({\n        type: ActionType.OverrideSpeaker,\n        speakerId,\n        speakerName: to,\n      });\n    },\n    [speakers, allSpeakers, dispatch]\n  );\n\n  const handleCreateNewSpeaker = useCallback(\n    (name: string) => {\n      if (\n        allSpeakers.includes(name) ||\n        unallocatedSpeakerNames.includes(name)\n      ) {\n        alert(`${name} already exists`);\n      } else {\n        allocateSpeakerNames((s) => [...s, name]);\n      }\n    },\n    [unallocatedSpeakerNames, allSpeakers]\n  );\n\n  const speakerOptions = useMemo(\n    () => [...allSpeakers, ...unallocatedSpeakerNames],\n    [allSpeakers, unallocatedSpeakerNames]\n  );\n\n  const handleSetSpeaker = useCallback(\n    (dialog: Dialog, name: string) => {\n      // set to unallocated speaker\n      let newId: number;\n      if (unallocatedSpeakerNames.includes(name)) {\n        newId = generateNewSpeakerId();\n      } else {\n        // find old speaker id\n        let speakerId = null;\n        for (const id in speakers) {\n          if (speakers[id] === name) {\n            speakerId = id;\n            break;\n          }\n        }\n\n        if (speakerId === null && allSpeakers.includes(name)) {\n          // it is a speaker number\n          speakerId = parseInt(name);\n        } else {\n          console.error(\"Cannot find speaker with existing name \", name);\n        }\n        newId = speakerId as unknown as number;\n      }\n      dispatch({\n        type: ActionType.OverrideSpeaker,\n        speakerId: newId,\n        speakerName: name,\n      });\n      setTranscription((t: Dialog[]) => {\n        const indexToReplace = t.indexOf(dialog);\n        return [\n          ...t.slice(0, indexToReplace),\n          { ...dialog, speaker: newId },\n          ...t.slice(indexToReplace + 1),\n        ];\n      });\n    },\n    [allSpeakers, setTranscription, speakers, unallocatedSpeakerNames, dispatch]\n  );\n\n  const handleSaveToQuip = useCallback(\n    (documentUrl: string, quipToken: string) => {\n      const markdown = makeMarkdown(transcription, speakers);\n\n      makePostRequest(\"/putDocument\", {\n        content: markdown,\n        documentUrl,\n        quipToken,\n      })\n        .then(() => {\n          window.open(documentUrl);\n        })\n        .catch((error) => alert(error));\n    },\n    [transcription, speakers]\n  );\n  const updateDialog = useCallback(\n    (dialogId: string, content: string) => {\n      setTranscription((t: Dialog[]) => {\n        const updated: Dialog[] = [];\n        for (const d of t) {\n          if (d.dialogId !== dialogId) {\n            updated.push(d);\n            continue;\n          }\n          const nd = {\n            ...d,\n            words: content,\n          };\n          updated.push(nd);\n        }\n        return updated;\n      });\n    },\n    [setTranscription]\n  );\n\n  const handleMergeUpDialog = useCallback(\n    (dialogId: string) => {\n      setTranscription((t) => {\n        const index = t.map(({ dialogId }) => dialogId).indexOf(dialogId);\n\n        const previousDialog = t[index - 1];\n        const dialog = t[index];\n\n        const mergedDialog: Dialog = {\n          ...previousDialog,\n          endTime: dialog.endTime,\n          words: previousDialog.words + \" \" + dialog.words,\n        };\n\n        return [...t.slice(0, index - 1), mergedDialog, ...t.slice(index + 1)];\n      });\n    },\n    [setTranscription]\n  );\n\n  const handleDeleteDialog = useCallback(\n    (dialogId: string) => {\n      setTranscription((t) => {\n        const index = t.map(({ dialogId }) => dialogId).indexOf(dialogId);\n\n        return [...t.slice(0, index), ...t.slice(index + 1)];\n      });\n    },\n    [setTranscription]\n  );\n\n  return (\n    <AmplifyAuthenticator>\n      {user && (\n        <div>\n          <div>\n            <Container fluid style={{ marginBottom: \"5rem\" }}>\n              <Row>\n                <Col xs={9}>\n                  <h3>Conversation</h3>\n                  {transcription.map((dialog, i) => (\n                    <DialogView\n                      key={i}\n                      dialog={dialog}\n                      color={\n                        colors[\n                          allSpeakers.indexOf(\n                            speakers[dialog.speaker] || String(dialog.speaker)\n                          )\n                        ]\n                      }\n                      speakerOptions={speakerOptions}\n                      onSetSpeaker={handleSetSpeaker}\n                      updateDialog={updateDialog}\n                      onMergeUpDialog={i > 0 ? handleMergeUpDialog : undefined}\n                      onDeleteDialog={handleDeleteDialog}\n                    />\n                  ))}\n                  {partial && (\n                    <DialogView\n                      partial={partial}\n                      speakerOptions={speakerOptions}\n                      onSetSpeaker={handleSetSpeaker}\n                    />\n                  )}\n                </Col>\n                <Col>\n                  <SpeakerList\n                    speakerNames={allSpeakers}\n                    onNameChange={handleSpeakerNameChange}\n                    unallocatedSpeakerNames={unallocatedSpeakerNames}\n                    addNewSpeaker={handleCreateNewSpeaker}\n                  />\n                </Col>\n              </Row>\n            </Container>\n          </div>\n          <BottomBar\n            onEventStreamMessage={handleEventStreamMessage}\n            saveToQuip={handleSaveToQuip}\n          />\n        </div>\n      )}\n    </AmplifyAuthenticator>\n  );\n};\n\nexport default App;\n","import { useCallback, useState } from \"react\";\nimport { Dialog } from \"./types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const useTranscribe = () => {\n  const [transcription, setTranscription] = useState<Dialog[]>([]);\n  const [partial, setPartial] = useState<string>(\"\");\n  const [error, setError] = useState<string>();\n\n  const handleEventStreamMessage = useCallback((messageJson: any) => {\n    const results = messageJson.Transcript.Results;\n\n    if (results.length > 0) {\n      if (results[0].Alternatives.length > 0) {\n        let transcript = results[0].Alternatives[0].Transcript;\n\n        // fix encoding for accented characters\n        transcript = decodeURIComponent(escape(transcript));\n\n        if (results[0].IsPartial) {\n          setPartial(transcript);\n        } else {\n          setPartial(\"\");\n          setTranscription((t: Dialog[]) => {\n            const dialogsToAppend: Dialog[] = [];\n            let speakerChanged = false;\n            for (const item of results[0].Alternatives[0].Items) {\n              const speaker = item.Speaker;\n              const text = item.Content;\n              const type = item.Type;\n              const startTime = item.StartTime;\n              const endTime = item.EndTime;\n\n              if (type === \"speaker-change\") {\n                speakerChanged = true;\n                continue;\n              }\n\n              const lastDialog =\n                dialogsToAppend.length > 0\n                  ? dialogsToAppend[dialogsToAppend.length - 1]\n                  : undefined;\n\n              // when speaker id changes and there is no \"speaker-change\" event in between, manually do it.\n              // skip scenarios where either of speakers are undefined\n              if (\n                lastDialog &&\n                lastDialog.speaker !== undefined &&\n                speaker !== undefined &&\n                lastDialog.speaker !== speaker\n              ) {\n                speakerChanged = true;\n              }\n\n              if (!lastDialog || speakerChanged) {\n                dialogsToAppend.push({\n                  dialogId: uuidv4(),\n                  speaker,\n                  words: text,\n                  startTime,\n                  endTime,\n                });\n              } else {\n                dialogsToAppend.pop();\n                dialogsToAppend.push({\n                  ...lastDialog,\n                  words:\n                    lastDialog.words +\n                    (type === \"pronunciation\" ? \" \" : \"\") +\n                    text,\n                  endTime,\n                });\n              }\n              speakerChanged = false;\n            }\n            return [...t, ...dialogsToAppend];\n          });\n        }\n      }\n    }\n  }, []);\n\n  return {\n    transcription,\n    setTranscription,\n    handleEventStreamMessage,\n    partial,\n    error,\n  };\n};\n\n// const useUserMedia = (): MediaStream | undefined => {\n//   const [userMediaStream, setUserMediaStream] =\n//     useState<MediaStream | undefined>(undefined);\n\n//   useEffect(() => {\n//     window.navigator.mediaDevices\n//       .getUserMedia({\n//         video: false,\n//         audio: true,\n//       })\n//       .then(setUserMediaStream)\n//       .catch(() => {\n//         alert(\"Cannot find the microphone\");\n//       });\n//   }, []);\n\n//   return userMediaStream;\n// };\n\n// const useMicStream = () => {\n//   const [micStream, setMicStream] =\n//     useState<MicrophoneStream | undefined>(undefined);\n//   const [inputSampleRate, setInputSampleRate] = useState();\n//   const userMediaStream = useUserMedia();\n\n//   useEffect(() => {\n//     if (userMediaStream) {\n//       console.log(\"creating mic stream\");\n//       const stream = new MicrophoneStream();\n//       (stream as any).on(\"format\", (data: any) => {\n//         setInputSampleRate(data.sampleRate);\n//       });\n\n//       stream.setStream(userMediaStream);\n\n//       (window as any).micStream = stream;\n//       setMicStream(stream);\n//     }\n//   }, [userMediaStream]);\n\n//   return { micStream, inputSampleRate };\n// };\n\n// export const useWebSocket = (credential: any, region: string) => {\n//   const [transcription, setTranscription] = useState<string>(\"\");\n//   const [partial, setPartial] = useState<string>(\"\");\n//   const [error, setError] = useState<string>();\n\n//   const handleEventStreamMessage = useCallback((messageJson: any) => {\n//     const results = messageJson.Transcript.Results;\n\n//     if (results.length > 0) {\n//       if (results[0].Alternatives.length > 0) {\n//         let transcript = results[0].Alternatives[0].Transcript;\n\n//         // fix encoding for accented characters\n//         transcript = decodeURIComponent(escape(transcript));\n\n//         if (results[0].IsPartial) {\n//           setPartial(transcript);\n//         } else {\n//           setPartial(\"\");\n//           setTranscription((t) => t + transcript + \"\\n\");\n//         }\n//       }\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     if (micStream && credential) {\n//       const url = createPresignedUrl(\n//         credential.AccessKeyId,\n//         credential.SecretAccessKey,\n//         credential.SessionToken,\n//         region\n//       ) as string;\n\n//       //open up our WebSocket connection\n//       const socket = new WebSocket(url);\n//       socket.binaryType = \"arraybuffer\";\n\n//       // when we get audio data from the mic, send it to the WebSocket if possible\n//       socket.onopen = function () {\n//         (micStream as any).on(\"data\", function (rawAudioChunk: any) {\n//           console.log(\"ondata\");\n//           // the audio stream is raw audio bytes. Transcribe expects PCM with additional metadata, encoded as binary\n//           const binary = convertAudioToBinaryMessage(\n//             rawAudioChunk,\n//             inputSampleRate\n//           );\n\n//           if (socket.readyState === socket.OPEN) socket.send(binary as any);\n//         });\n//       };\n\n//       // handle messages, errors, and close events\n//       // handle inbound messages from Amazon Transcribe\n//       socket.onmessage = function (message) {\n//         //convert the binary event stream message to JSON\n//         const messageWrapper = eventStreamMarshaller.unmarshall(\n//           Buffer.from(message.data)\n//         );\n//         const messageBody = JSON.parse(\n//           String.fromCharCode(...messageWrapper.body)\n//         );\n//         if (messageWrapper.headers[\":message-type\"].value === \"event\") {\n//           handleEventStreamMessage(messageBody);\n//         } else {\n//           setError(messageBody.Message);\n//           // TODO: stop\n//         }\n//       };\n\n//       socket.onerror = function () {\n//         setError(\"WebSocket connection error. Try again.\");\n//         // TODO: stop\n//       };\n\n//       socket.onclose = function (closeEvent) {\n//         console.log(\"closing websocket\");\n//         micStream.stop();\n\n//         // TODO: stop\n//       };\n//     }\n//   }, [\n//     handleEventStreamMessage,\n//     micStream,\n//     inputSampleRate,\n//     credential,\n//     region,\n//   ]);\n\n//   return {\n//     transcription,\n//     partial,\n//     error,\n//   };\n// };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Amplify from \"aws-amplify\";\nimport { store } from \"./redux\";\nimport { Provider } from \"react-redux\";\n\nAmplify.configure({\n  // OPTIONAL - if your API requires authentication\n  Auth: {\n    // REQUIRED - Amazon Cognito Identity Pool ID\n    identityPoolId: \"us-west-2:b712e33e-583d-42df-b9fa-14325852efbf\",\n    // REQUIRED - Amazon Cognito Region\n    region: \"us-west-2\",\n    // OPTIONAL - Amazon Cognito User Pool ID\n    userPoolId: \"us-west-2_gdDt1nKsQ\",\n    // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n    userPoolWebClientId: \"6ihc4536tkdk627cmkomahfmkl\",\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"SAMAPI\",\n        endpoint: \"https://3apx34jtve.execute-api.us-west-2.amazonaws.com/Prod\",\n      },\n    ],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}