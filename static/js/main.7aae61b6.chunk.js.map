{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","contexts.ts","hooks.ts","RecordControl.tsx","utils.ts","UserControls.tsx","BottomBar.tsx","MarkdownEditor.tsx","EditableMarkdown.tsx","DialogView.tsx","EditableSpan.tsx","SpeakerList.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","UserContext","createContext","undefined","SpeakersContext","speakers","setSpeakers","_","useUser","useContext","Styles","styled","div","RecordControl","setCredential","setStop","saveToQuip","user","useState","loading","setLoading","handleStartSession","useCallback","path","Auth","currentSession","session","jwtToken","getIdToken","getJwtToken","API","get","headers","Authorization","data","credentials","catch","handleStopSession","handleSaveToQuip","url","prompt","color","size","disabled","onClick","UserControls","attributes","email","BottomBar","props","MarkdownEditor","value","onChange","onBlur","useMemo","inlineToolbarPlugin","createInlineToolbarPlugin","InlineToolbar","plugins","EditorState","createWithContent","convertFromRaw","markdownToDraft","editorState","setEditorState","handleChange","newState","markdown","draftToMarkdown","convertToRaw","getCurrentContent","styleItems","UNDERLINE","open","close","EditorContainer","SpanContainer","EditableMarkdown","editing","setEditing","icon","faEdit","DialogView","dialog","partial","speakerOptions","onSetSpeaker","updateDialog","_color","Color","speakerName","speaker","String","style","borderColor","className","backgroundColor","faUserAstronaut","Dropdown","Toggle","Menu","show","name","Item","href","lighten","hex","words","newValue","dialogId","faClock","startTime","toFixed","React","memo","Span","span","EditableSpan","children","setValue","useEffect","Form","Control","target","Button","SpeakerList","speakerNames","onNameChange","unallocatedSpeakerNames","addNewSpeaker","newSpeakerName","setNewSpeakerName","ListGroup","background","customSpeakerIds","DEFAULT_COLORS","distinctColors","count","lightMin","App","setUser","onAuthUIStateChange","nextAuthState","authData","AuthState","SignedIn","stop","credential","region","transcription","setTranscription","setPartial","error","handleEventStreamMessage","messageJson","results","Transcript","Results","length","Alternatives","transcript","decodeURIComponent","escape","IsPartial","t","dialogsToAppend","speakerChanged","Items","item","Speaker","text","Content","type","Type","StartTime","endTime","EndTime","lastDialog","push","uuidv4","pop","window","access_id","AccessKeyId","secret_key","SecretAccessKey","session_token","SessionToken","startTranscribe","closeSocket","console","log","useTranscribe","allocateSpeakerNames","speakerContextValue","allSpeakers","Set","sort","unallocated","filter","includes","colors","handleSpeakerNameChange","from","to","speakerId","parseInt","Number","handleCreateNewSpeaker","alert","s","handleSetSpeaker","newId","generateNewSpeakerId","indexToReplace","indexOf","slice","documentUrl","payload","dialogs","strings","join","makeMarkdown","content","put","body","updated","d","nd","Provider","Container","fluid","marginBottom","Row","Col","xs","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Amplify","configure","identityPoolId","userPoolId","userPoolWebClientId","endpoints","endpoint","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aae61b6.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t851,\n\t\t16\n\t],\n\t\"./amplify-auth-container.entry.js\": [\n\t\t852,\n\t\t17\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t853,\n\t\t18\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t854,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t855,\n\t\t19\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t856,\n\t\t4\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t857,\n\t\t20\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t858,\n\t\t6\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t859,\n\t\t21\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t860,\n\t\t22\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t861,\n\t\t23\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t862,\n\t\t24\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t863,\n\t\t25\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t864,\n\t\t26\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t865,\n\t\t7\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t866,\n\t\t27\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t867,\n\t\t28\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t868,\n\t\t29\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t869,\n\t\t30\n\t],\n\t\"./amplify-radio-button_3.entry.js\": [\n\t\t870,\n\t\t8\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t871,\n\t\t9\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t872,\n\t\t10\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t873,\n\t\t11\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t874,\n\t\t12\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t875,\n\t\t13\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t876,\n\t\t31\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t877,\n\t\t14\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t878,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 607;\nmodule.exports = webpackAsyncContext;","import { createContext } from \"react\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\n\nexport const UserContext = createContext<CognitoUser | undefined>(undefined);\n\ninterface SpeakersContextStates {\n  speakers: Record<number, string>;\n  setSpeakers: (value: Record<number, string>) => void;\n}\nexport const SpeakersContext = createContext<SpeakersContextStates>({\n  speakers: {},\n  setSpeakers: (_) => null,\n});\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"./contexts\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport { Dialog } from \"./types\";\nimport { v4 as uuidv4 } from \"uuid\";\n// import MicrophoneStream from \"microphone-stream\";\n// import {\n//   convertAudioToBinaryMessage,\n//   createPresignedUrl,\n// } from \"../public/amazon-transcribe-websocket-static/main\";\n// import { eventStreamMarshaller } from \"../public/amazon-transcribe-websocket-static/marshaller\";\n\ntype CognitoUserTweaked = CognitoUser & {\n  username?: string;\n  attributes?: {\n    email: string;\n    email_verified: boolean;\n  };\n};\n\nexport const useUser = (): CognitoUserTweaked | undefined =>\n  useContext(UserContext);\n\nexport const useTranscribe = (credential: any, region: string, stop: any) => {\n  const [transcription, setTranscription] = useState<Dialog[]>([]);\n  const [partial, setPartial] = useState<string>(\"\");\n  const [error, setError] = useState<string>();\n\n  const handleEventStreamMessage = useCallback((messageJson: any) => {\n    const results = messageJson.Transcript.Results;\n\n    if (results.length > 0) {\n      if (results[0].Alternatives.length > 0) {\n        let transcript = results[0].Alternatives[0].Transcript;\n\n        // fix encoding for accented characters\n        transcript = decodeURIComponent(escape(transcript));\n\n        if (results[0].IsPartial) {\n          setPartial(transcript);\n        } else {\n          setPartial(\"\");\n          setTranscription((t: Dialog[]) => {\n            const dialogsToAppend: Dialog[] = [];\n            let speakerChanged = false;\n            for (const item of results[0].Alternatives[0].Items) {\n              const speaker = item.Speaker;\n              const text = item.Content;\n              const type = item.Type;\n              const startTime = item.StartTime;\n              const endTime = item.EndTime;\n\n              if (type === \"speaker-change\") {\n                speakerChanged = true;\n                continue;\n              }\n\n              const lastDialog =\n                dialogsToAppend.length > 0\n                  ? dialogsToAppend[dialogsToAppend.length - 1]\n                  : undefined;\n\n              // when speaker id changes and there is no \"speaker-change\" event in between, manually do it.\n              // skip scenarios where either of speakers are undefined\n              if (\n                lastDialog &&\n                lastDialog.speaker !== undefined &&\n                speaker !== undefined &&\n                lastDialog.speaker !== speaker\n              ) {\n                speakerChanged = true;\n              }\n\n              if (!lastDialog || speakerChanged) {\n                dialogsToAppend.push({\n                  dialogId: uuidv4(),\n                  speaker,\n                  words: text,\n                  startTime,\n                  endTime,\n                });\n              } else {\n                dialogsToAppend.pop();\n                dialogsToAppend.push({\n                  ...lastDialog,\n                  words:\n                    lastDialog.words +\n                    (type === \"pronunciation\" ? \" \" : \"\") +\n                    text,\n                  endTime,\n                });\n              }\n              speakerChanged = false;\n            }\n            return [...t, ...dialogsToAppend];\n          });\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (credential && region && !stop) {\n      (window as any).handleEventStreamMessage = handleEventStreamMessage;\n      (window as any).region = region;\n      (window as any).access_id = credential.AccessKeyId;\n      (window as any).secret_key = credential.SecretAccessKey;\n      (window as any).session_token = credential.SessionToken;\n      (window as any).startTranscribe();\n    } else if (stop) {\n      (window as any).closeSocket();\n      console.log(\"stop button clicked\");\n    }\n  }, [credential, region, handleEventStreamMessage, stop]);\n\n  return {\n    transcription,\n    setTranscription,\n    partial,\n    error,\n  };\n};\n\n// const useUserMedia = (): MediaStream | undefined => {\n//   const [userMediaStream, setUserMediaStream] =\n//     useState<MediaStream | undefined>(undefined);\n\n//   useEffect(() => {\n//     window.navigator.mediaDevices\n//       .getUserMedia({\n//         video: false,\n//         audio: true,\n//       })\n//       .then(setUserMediaStream)\n//       .catch(() => {\n//         alert(\"Cannot find the microphone\");\n//       });\n//   }, []);\n\n//   return userMediaStream;\n// };\n\n// const useMicStream = () => {\n//   const [micStream, setMicStream] =\n//     useState<MicrophoneStream | undefined>(undefined);\n//   const [inputSampleRate, setInputSampleRate] = useState();\n//   const userMediaStream = useUserMedia();\n\n//   useEffect(() => {\n//     if (userMediaStream) {\n//       console.log(\"creating mic stream\");\n//       const stream = new MicrophoneStream();\n//       (stream as any).on(\"format\", (data: any) => {\n//         setInputSampleRate(data.sampleRate);\n//       });\n\n//       stream.setStream(userMediaStream);\n\n//       (window as any).micStream = stream;\n//       setMicStream(stream);\n//     }\n//   }, [userMediaStream]);\n\n//   return { micStream, inputSampleRate };\n// };\n\n// export const useWebSocket = (credential: any, region: string) => {\n//   const [transcription, setTranscription] = useState<string>(\"\");\n//   const [partial, setPartial] = useState<string>(\"\");\n//   const [error, setError] = useState<string>();\n\n//   const handleEventStreamMessage = useCallback((messageJson: any) => {\n//     const results = messageJson.Transcript.Results;\n\n//     if (results.length > 0) {\n//       if (results[0].Alternatives.length > 0) {\n//         let transcript = results[0].Alternatives[0].Transcript;\n\n//         // fix encoding for accented characters\n//         transcript = decodeURIComponent(escape(transcript));\n\n//         if (results[0].IsPartial) {\n//           setPartial(transcript);\n//         } else {\n//           setPartial(\"\");\n//           setTranscription((t) => t + transcript + \"\\n\");\n//         }\n//       }\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     if (micStream && credential) {\n//       const url = createPresignedUrl(\n//         credential.AccessKeyId,\n//         credential.SecretAccessKey,\n//         credential.SessionToken,\n//         region\n//       ) as string;\n\n//       //open up our WebSocket connection\n//       const socket = new WebSocket(url);\n//       socket.binaryType = \"arraybuffer\";\n\n//       // when we get audio data from the mic, send it to the WebSocket if possible\n//       socket.onopen = function () {\n//         (micStream as any).on(\"data\", function (rawAudioChunk: any) {\n//           console.log(\"ondata\");\n//           // the audio stream is raw audio bytes. Transcribe expects PCM with additional metadata, encoded as binary\n//           const binary = convertAudioToBinaryMessage(\n//             rawAudioChunk,\n//             inputSampleRate\n//           );\n\n//           if (socket.readyState === socket.OPEN) socket.send(binary as any);\n//         });\n//       };\n\n//       // handle messages, errors, and close events\n//       // handle inbound messages from Amazon Transcribe\n//       socket.onmessage = function (message) {\n//         //convert the binary event stream message to JSON\n//         const messageWrapper = eventStreamMarshaller.unmarshall(\n//           Buffer.from(message.data)\n//         );\n//         const messageBody = JSON.parse(\n//           String.fromCharCode(...messageWrapper.body)\n//         );\n//         if (messageWrapper.headers[\":message-type\"].value === \"event\") {\n//           handleEventStreamMessage(messageBody);\n//         } else {\n//           setError(messageBody.Message);\n//           // TODO: stop\n//         }\n//       };\n\n//       socket.onerror = function () {\n//         setError(\"WebSocket connection error. Try again.\");\n//         // TODO: stop\n//       };\n\n//       socket.onclose = function (closeEvent) {\n//         console.log(\"closing websocket\");\n//         micStream.stop();\n\n//         // TODO: stop\n//       };\n//     }\n//   }, [\n//     handleEventStreamMessage,\n//     micStream,\n//     inputSampleRate,\n//     credential,\n//     region,\n//   ]);\n\n//   return {\n//     transcription,\n//     partial,\n//     error,\n//   };\n// };\n","import { AmplifyButton } from \"@aws-amplify/ui-react\";\nimport React, { useCallback, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport styled from \"styled-components\";\nimport { useUser } from \"./hooks\";\nimport { makeRequest } from \"./utils\";\n\nconst Styles = styled.div`\n  display: flex;\n  width: auto;\n  align-items: center;\n`;\n\nexport interface RecordControlProps {\n  setCredential: (credential: any) => void;\n  setStop: (stop: any) => void;\n  saveToQuip: (documentUrl: string) => void;\n}\n\nconst RecordControl: React.FC<RecordControlProps> = ({\n  setCredential,\n  setStop,\n  saveToQuip,\n}) => {\n  const user = useUser();\n  const [loading, setLoading] = useState(false);\n\n  const handleStartSession = useCallback(() => {\n    if (user) {\n      setLoading(true);\n      setStop(false);\n      makeRequest(\"/start-session\")\n        .then((data: any) => {\n          setCredential(data.credentials);\n          setLoading(false);\n        })\n        .catch(() => setLoading(false));\n    }\n  }, [user, setCredential]);\n\n  const handleStopSession = useCallback(() => {\n    if (user) {\n      setStop(true);\n    }\n  }, [user, setStop]);\n\n  const handleSaveToQuip = useCallback(() => {\n    const url = prompt(\"Quip document URL:\");\n    if (url) {\n      saveToQuip(url);\n    }\n  }, [saveToQuip]);\n\n  return (\n    <Styles>\n      {loading && <ClipLoader color=\"white\" size={20} />}\n      <AmplifyButton disabled={!user} onClick={handleSaveToQuip}>\n        Save to Quip\n      </AmplifyButton>\n      <AmplifyButton disabled={!user} onClick={handleStartSession}>\n        Start\n      </AmplifyButton>\n      <AmplifyButton disabled={!user} onClick={handleStopSession}>\n        Stop\n      </AmplifyButton>\n    </Styles>\n  );\n};\n\nexport default RecordControl;\n","import { API, Auth } from \"aws-amplify\";\nimport { Dialog } from \"./types\";\n\nexport const makeRequest = <T>(path: string): Promise<T> => {\n  return Auth.currentSession().then((session) => {\n    const jwtToken = session.getIdToken().getJwtToken();\n    return API.get(\"SAMAPI\", path, {\n      headers: { Authorization: \"Bearer \" + jwtToken },\n    });\n  });\n};\n\nexport const makePostRequest = <T>(\n  path: string,\n  payload: Record<string, string>\n): Promise<T> => {\n  return Auth.currentSession().then((session) => {\n    const jwtToken = session.getIdToken().getJwtToken();\n    return API.put(\"SAMAPI\", path, {\n      body: payload,\n      headers: { Authorization: \"Bearer \" + jwtToken },\n    });\n  });\n};\n\nexport const makeMarkdown = (\n  dialogs: Dialog[],\n  speakers: Record<number, string>\n): string => {\n  const strings = [\"# Transcribe\"];\n\n  for (const dialog of dialogs) {\n    strings.push(\n      `(${dialog.startTime.toFixed(2)}-${dialog.endTime.toFixed(2)}) **${\n        speakers[dialog.speaker] || dialog.speaker\n      }** ${dialog.words}`\n    );\n  }\n\n  return strings.join(\"\\n\\n\");\n};\n","import { AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useUser } from \"./hooks\";\n\nconst Styles = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & > span {\n    margin: 0 1rem;\n  }\n`;\n\nconst UserControls: React.FC = () => {\n  const user = useUser();\n\n  if (!user) return null;\n\n  return (\n    <Styles>\n      <span>{user?.attributes?.email}</span>\n      <AmplifySignOut />\n    </Styles>\n  );\n};\n\nexport default UserControls;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RecordControl, { RecordControlProps } from \"./RecordControl\";\nimport UserControls from \"./UserControls\";\n\nconst Styles = styled.div`\n  display: flex;\n  position: fixed;\n  width: 100%;\n  bottom: 0;\n  background-color: orange;\n  justify-content: space-between;\n  color: white;\n`;\n\nconst BottomBar: React.FC<RecordControlProps> = (props) => {\n  return (\n    <Styles>\n      <UserControls />\n      <RecordControl {...props} />\n    </Styles>\n  );\n};\n\nexport default BottomBar;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { EditorState, convertFromRaw, convertToRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createInlineToolbarPlugin from \"@draft-js-plugins/inline-toolbar\";\nimport \"@draft-js-plugins/inline-toolbar/lib/plugin.css\";\nimport { draftToMarkdown, markdownToDraft } from \"markdown-draft-js\";\n\nexport interface MarkdownEditorProps {\n  value: string;\n  onChange: (newValue: string) => void;\n}\n\nconst MarkdownEditor: React.FC<MarkdownEditorProps & { onBlur: () => void }> =\n  ({ value, onChange, onBlur }) => {\n    const [plugins, InlineToolbar] = useMemo(() => {\n      const inlineToolbarPlugin = createInlineToolbarPlugin();\n      return [[inlineToolbarPlugin], inlineToolbarPlugin.InlineToolbar];\n    }, []);\n\n    const [editorState, setEditorState] = useState(() =>\n      EditorState.createWithContent(convertFromRaw(markdownToDraft(value)))\n    );\n\n    const handleChange = useCallback(\n      (newState: EditorState) => {\n        setEditorState(newState);\n\n        const markdown = draftToMarkdown(\n          convertToRaw(newState.getCurrentContent()),\n          {\n            styleItems: {\n              UNDERLINE: {\n                open: function open() {\n                  return \"<u>\";\n                },\n\n                close: function close() {\n                  return \"</u>\";\n                },\n              },\n            },\n          }\n        );\n        onChange(markdown);\n      },\n      [onChange]\n    );\n\n    return (\n      <div>\n        <Editor\n          editorState={editorState}\n          onChange={handleChange}\n          onBlur={onBlur}\n          plugins={plugins}\n        />\n        <InlineToolbar />\n      </div>\n    );\n  };\n\nexport default MarkdownEditor;\n","import React, { useState } from \"react\";\nimport MarkdownEditor, { MarkdownEditorProps } from \"./MarkdownEditor\";\nimport ReactMarkdown from \"react-markdown\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\n\nconst EditorContainer = styled.div`\n  padding-bottom: 10px;\n`;\n\nconst SpanContainer = styled.div`\n  min-height: 60px;\n  cursor: pointer;\n\n  svg {\n    position: absolute;\n    bottom: 5px;\n    right: 5px;\n  }\n`;\n\nconst EditableMarkdown: React.FC<MarkdownEditorProps> = ({\n  value,\n  onChange,\n}) => {\n  const [editing, setEditing] = useState(false);\n\n  return editing ? (\n    <EditorContainer>\n      <MarkdownEditor\n        value={value}\n        onChange={onChange}\n        onBlur={() => setEditing(false)}\n      />\n    </EditorContainer>\n  ) : (\n    <SpanContainer onClick={() => setEditing(true)}>\n      <span>\n        <ReactMarkdown>{value}</ReactMarkdown>\n      </span>\n      <FontAwesomeIcon icon={faEdit} />\n    </SpanContainer>\n  );\n};\n\nexport default EditableMarkdown;\n","import { faClock, faUserAstronaut } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { BeatLoader } from \"react-spinners\";\nimport styled from \"styled-components\";\nimport { SpeakersContext } from \"./contexts\";\nimport { Dialog } from \"./types\";\nimport Color from \"color\";\nimport { Dropdown, Form } from \"react-bootstrap\";\nimport EditableMarkdown from \"./EditableMarkdown\";\n\nconst Styles = styled.div`\n  display: flex;\n  border: solid 1px;\n  border-radius: 5px;\n  margin: 1rem;\n\n  .meta {\n    flex-shrink: 0;\n    width: 120px;\n    position: relative;\n    text-align: center;\n    min-height: 50px;\n\n    .speaking {\n      margin-top: 5px;\n    }\n\n    .speaker {\n      width: 120px;\n      height: 80px;\n\n      .speaker-icon {\n        font-size: 30px;\n      }\n\n      .speaker-label {\n        font-weight: bold;\n        cursor: pointer;\n        font-size: 1rem;\n\n        .btn {\n          /* erase the styles brought by react-bootstrap */\n          background-color: unset !important;\n          border: unset !important;\n          color: black;\n        }\n      }\n    }\n  }\n\n  .content {\n    padding: 5px;\n    flex-grow: 1;\n    position: relative;\n\n    .form-control {\n      background-color: transparent !important;\n    }\n\n    .timestamp {\n      position: absolute;\n      font-size: 0.6rem;\n      bottom: 5px;\n      left: 10px;\n    }\n  }\n`;\n\ninterface Props {\n  dialog?: Dialog;\n  partial?: string;\n  color?: string;\n  speakerOptions: string[];\n  onSetSpeaker: (dialog: Dialog, name: string) => void;\n  updateDialog?: (diaglogId: string, dialog: string) => void;\n}\n\nconst DialogView: React.FC<Props> = ({\n  dialog,\n  partial,\n  color = \"#fff\",\n  speakerOptions,\n  onSetSpeaker,\n  updateDialog,\n}) => {\n  const { speakers, setSpeakers } = useContext(SpeakersContext);\n  const [editing, setEditing] = useState(false);\n\n  const _color = Color(color);\n\n  const speakerName =\n    dialog && (speakers[dialog.speaker] || String(dialog.speaker));\n\n  return (\n    <Styles style={{ borderColor: color }}>\n      <div className=\"meta\" style={{ backgroundColor: color }}>\n        {dialog && (\n          <>\n            <div className=\"speaker\">\n              <div className=\"speaker-icon\">\n                <FontAwesomeIcon icon={faUserAstronaut} />\n              </div>\n              <div className=\"speaker-label\" onClick={() => setEditing(true)}>\n                <Dropdown>\n                  <Dropdown.Toggle>{speakerName}</Dropdown.Toggle>\n\n                  <Dropdown.Menu show={editing}>\n                    {speakerOptions.map((name) => (\n                      <Dropdown.Item\n                        key={name}\n                        href=\"#\"\n                        onClick={() => onSetSpeaker(dialog, name)}\n                      >\n                        {name}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </div>\n          </>\n        )}\n        {partial && (\n          <div className=\"speaking\">\n            <BeatLoader />\n          </div>\n        )}\n      </div>\n      <div\n        className=\"content\"\n        style={{ backgroundColor: _color.lighten(0.2).hex() }}\n      >\n        {dialog && (\n          <EditableMarkdown\n            value={dialog.words}\n            onChange={(newValue) => {\n              if (updateDialog && dialog) {\n                updateDialog(dialog.dialogId, newValue);\n              }\n            }}\n          />\n        )}\n        {partial && <span>{partial}</span>}\n        {dialog && (\n          <div className=\"timestamp\">\n            <FontAwesomeIcon icon={faClock} /> {dialog.startTime.toFixed(2)}s\n          </div>\n        )}\n      </div>\n    </Styles>\n  );\n};\n\nexport default React.memo(DialogView);\n","import { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst Span = styled.span`\n  cursor: pointer;\n`;\n\ninterface Props {\n  children: string;\n  onChange: (newValue: string) => void;\n}\n\nconst EditableSpan: React.FC<Props> = ({ children, onChange }) => {\n  const [value, setValue] = useState(children);\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    setValue(children);\n  }, [children]);\n\n  return editing ? (\n    <div>\n      <Form.Control value={value} onChange={(e) => setValue(e.target.value)} />\n      <Button\n        onClick={() => {\n          setValue(children);\n          setEditing(false);\n        }}\n      >\n        Cancel\n      </Button>{\" \"}\n      <Button\n        onClick={() => {\n          onChange(value);\n          setEditing(false);\n        }}\n      >\n        Save\n      </Button>\n    </div>\n  ) : (\n    <Span onClick={() => setEditing(true)}>\n      <FontAwesomeIcon icon={faEdit} /> {value}\n    </Span>\n  );\n};\n\nexport default EditableSpan;\n","import React, { useState } from \"react\";\nimport { Button, Form, ListGroup } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport EditableSpan from \"./EditableSpan\";\n\nconst Styles = styled.div`\n  position: fixed;\n  right: 0;\n  padding: 5px;\n  width: 25%;\n`;\n\ninterface Props {\n  speakerNames: string[];\n  unallocatedSpeakerNames: string[];\n  onNameChange: (from: string, to: string) => void;\n  addNewSpeaker: (name: string) => void;\n}\n\nconst SpeakerList: React.FC<Props> = ({\n  speakerNames,\n  onNameChange,\n  unallocatedSpeakerNames,\n  addNewSpeaker,\n}) => {\n  const [newSpeakerName, setNewSpeakerName] = useState(\"\");\n\n  return (\n    <Styles>\n      <h3>Speakers</h3>\n      <ListGroup>\n        {speakerNames.map((name) => (\n          <ListGroup.Item key={name}>\n            <EditableSpan onChange={(newValue) => onNameChange(name, newValue)}>\n              {name}\n            </EditableSpan>\n          </ListGroup.Item>\n        ))}\n        {unallocatedSpeakerNames.map((name) => (\n          <ListGroup.Item key={name} style={{ background: \"#ccc\" }}>\n            <EditableSpan onChange={(newValue) => onNameChange(name, newValue)}>\n              {name}\n            </EditableSpan>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n      <Form.Control\n        value={newSpeakerName}\n        onChange={(e) => setNewSpeakerName(e.target.value)}\n      />\n      <Button\n        disabled={!newSpeakerName}\n        onClick={() => {\n          newSpeakerName && addNewSpeaker(newSpeakerName);\n          setNewSpeakerName(\"\");\n        }}\n      >\n        Add Speaker\n      </Button>\n    </Styles>\n  );\n};\n\nexport default SpeakerList;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AmplifyAuthenticator } from \"@aws-amplify/ui-react\";\nimport { AuthState, onAuthUIStateChange } from \"@aws-amplify/ui-components\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport BottomBar from \"./BottomBar\";\nimport { SpeakersContext, UserContext } from \"./contexts\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport { useTranscribe } from \"./hooks\";\nimport DialogView from \"./DialogView\";\nimport distinctColors from \"distinct-colors\";\nimport SpeakerList from \"./SpeakerList\";\nimport { Dialog } from \"./types\";\nimport { makeMarkdown, makePostRequest } from \"./utils\";\n\nconst customSpeakerIds: number[] = [];\nconst generateNewSpeakerId = (): number => {\n  if (customSpeakerIds.length === 0) {\n    customSpeakerIds.push(10000);\n    return 10000;\n  } else {\n    const newId = customSpeakerIds[customSpeakerIds.length - 1] + 1;\n    customSpeakerIds.push(newId);\n    return newId;\n  }\n};\n\nconst region = \"us-west-2\";\n\nconst DEFAULT_SPEAKER_COUNT = 6; // if there are more speakers, we recreate the colors object\nconst DEFAULT_COLORS = distinctColors({\n  count: DEFAULT_SPEAKER_COUNT,\n  lightMin: 80,\n}).map((color) => color.hex());\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState<CognitoUser | undefined>(undefined);\n\n  useEffect(() => {\n    return onAuthUIStateChange((nextAuthState, authData) => {\n      if (nextAuthState === AuthState.SignedIn) {\n        setUser(authData as CognitoUser);\n      } else {\n        setUser(undefined);\n      }\n    });\n  }, []);\n\n  const [stop, setStop] = useState<any>();\n\n  const [credential, setCredential] = useState<any>();\n  const { transcription, setTranscription, partial, error } = useTranscribe(\n    credential,\n    region,\n    stop\n  );\n  const [speakers, setSpeakers] = useState<Record<number, string>>({});\n\n  const [unallocatedSpeakerNames, allocateSpeakerNames] = useState<string[]>(\n    []\n  );\n\n  const speakerContextValue = useMemo(\n    () => ({\n      speakers,\n      setSpeakers,\n    }),\n    [speakers]\n  );\n\n  const allSpeakers = [\n    ...new Set(\n      transcription.map(({ speaker }) => speakers[speaker] || String(speaker))\n    ),\n  ].sort();\n\n  useEffect(() => {\n    allocateSpeakerNames((unallocated) => {\n      const allocated = unallocated.filter((name) =>\n        allSpeakers.includes(name)\n      );\n\n      if (allocated.length > 0) {\n        return unallocated.filter((name) => !allSpeakers.includes(name));\n      }\n      return unallocated;\n    });\n  }, [allSpeakers]);\n\n  const colors = useMemo(\n    () =>\n      allSpeakers.length > DEFAULT_SPEAKER_COUNT\n        ? distinctColors({ count: allSpeakers.length }).map((color) =>\n            color.hex()\n          )\n        : DEFAULT_COLORS,\n    [allSpeakers.length]\n  );\n\n  const handleSpeakerNameChange = useCallback(\n    (from: string, to: string) => {\n      // find old speaker id\n      let speakerId = null;\n      for (const id in speakers) {\n        if (speakers[id] === from) {\n          speakerId = id;\n          break;\n        }\n      }\n\n      if (speakerId === null && allSpeakers.includes(from)) {\n        // it is a speaker number\n        speakerId = parseInt(from);\n      } else {\n        console.error(\"Cannot find speaker with existing name \", from);\n      }\n\n      setSpeakers({ ...speakers, [Number(speakerId)]: to });\n    },\n    [speakers, allSpeakers]\n  );\n\n  const handleCreateNewSpeaker = useCallback(\n    (name: string) => {\n      if (\n        allSpeakers.includes(name) ||\n        unallocatedSpeakerNames.includes(name)\n      ) {\n        alert(`${name} already exists`);\n      } else {\n        allocateSpeakerNames((s) => [...s, name]);\n      }\n    },\n    [unallocatedSpeakerNames, allSpeakers]\n  );\n\n  const speakerOptions = useMemo(\n    () => [...allSpeakers, ...unallocatedSpeakerNames],\n    [allSpeakers, unallocatedSpeakerNames]\n  );\n\n  const handleSetSpeaker = useCallback(\n    (dialog: Dialog, name: string) => {\n      // set to unallocated speaker\n      let newId: number;\n      if (unallocatedSpeakerNames.includes(name)) {\n        newId = generateNewSpeakerId();\n      } else {\n        // find old speaker id\n        let speakerId = null;\n        for (const id in speakers) {\n          if (speakers[id] === name) {\n            speakerId = id;\n            break;\n          }\n        }\n\n        if (speakerId === null && allSpeakers.includes(name)) {\n          // it is a speaker number\n          speakerId = parseInt(name);\n        } else {\n          console.error(\"Cannot find speaker with existing name \", name);\n        }\n        newId = speakerId as unknown as number;\n      }\n      setSpeakers((s) => ({ ...s, [newId]: name }));\n      setTranscription((t: Dialog[]) => {\n        const indexToReplace = t.indexOf(dialog);\n        return [\n          ...t.slice(0, indexToReplace),\n          { ...dialog, speaker: newId },\n          ...t.slice(indexToReplace + 1),\n        ];\n      });\n    },\n    [allSpeakers, setTranscription, speakers, unallocatedSpeakerNames]\n  );\n\n  const handleSaveToQuip = useCallback(\n    (documentUrl: string) => {\n      const markdown = makeMarkdown(transcription, speakers);\n\n      makePostRequest(\"/putDocument\", {\n        content: markdown,\n        documentUrl,\n      })\n        .then(() => {\n          window.open(documentUrl);\n        })\n        .catch((error) => alert(error));\n    },\n    [transcription, speakers]\n  );\n  const updateDialog = useCallback(\n    (dialogId: string, content: string) => {\n      setTranscription((t: Dialog[]) => {\n        const updated: Dialog[] = [];\n        for (const d of t) {\n          if (d.dialogId !== dialogId) {\n            updated.push(d);\n            continue;\n          }\n          const nd = {\n            ...d,\n            words: content,\n          };\n          updated.push(nd);\n        }\n        return updated;\n      });\n    },\n    [setTranscription]\n  );\n\n  return (\n    <AmplifyAuthenticator>\n      {user && (\n        <UserContext.Provider value={user}>\n          <div>\n            <Container fluid style={{ marginBottom: \"5rem\" }}>\n              <Row>\n                <Col xs={9}>\n                  <h3>Conversation</h3>\n                  <SpeakersContext.Provider value={speakerContextValue}>\n                    {transcription.map((dialog, i) => (\n                      <DialogView\n                        key={i}\n                        dialog={dialog}\n                        color={\n                          colors[\n                            allSpeakers.indexOf(\n                              speakers[dialog.speaker] || String(dialog.speaker)\n                            )\n                          ]\n                        }\n                        speakerOptions={speakerOptions}\n                        onSetSpeaker={handleSetSpeaker}\n                        updateDialog={updateDialog}\n                      />\n                    ))}\n                    {partial && (\n                      <DialogView\n                        partial={partial}\n                        speakerOptions={speakerOptions}\n                        onSetSpeaker={handleSetSpeaker}\n                      />\n                    )}\n                  </SpeakersContext.Provider>\n                </Col>\n                <Col>\n                  <SpeakerList\n                    speakerNames={allSpeakers}\n                    onNameChange={handleSpeakerNameChange}\n                    unallocatedSpeakerNames={unallocatedSpeakerNames}\n                    addNewSpeaker={handleCreateNewSpeaker}\n                  />\n                </Col>\n              </Row>\n            </Container>\n          </div>\n          <BottomBar\n            setCredential={setCredential}\n            saveToQuip={handleSaveToQuip}\n            setStop={setStop}\n          />\n        </UserContext.Provider>\n      )}\n    </AmplifyAuthenticator>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Amplify from \"aws-amplify\";\n\nAmplify.configure({\n  // OPTIONAL - if your API requires authentication\n  Auth: {\n    // REQUIRED - Amazon Cognito Identity Pool ID\n    identityPoolId: \"us-west-2:b712e33e-583d-42df-b9fa-14325852efbf\",\n    // REQUIRED - Amazon Cognito Region\n    region: \"us-west-2\",\n    // OPTIONAL - Amazon Cognito User Pool ID\n    userPoolId: \"us-west-2_gdDt1nKsQ\",\n    // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n    userPoolWebClientId: \"6ihc4536tkdk627cmkomahfmkl\",\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"SAMAPI\",\n        endpoint: \"https://3apx34jtve.execute-api.us-west-2.amazonaws.com/Prod\",\n      },\n    ],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}